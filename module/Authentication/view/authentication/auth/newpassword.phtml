<?php $this->headtitle("New Password"); ?>

<section id="ress" class="h-screen flex items-center justify-center relative overflow-hidden bg-[url('../../assets/images/hero/bg3.jpg')] bg-no-repeat bg-left-bottom bg-cover">
    <div class="absolute inset-0 bg-gradient-to-b from-transparent to-black"></div>
    <div class="container">
        <div class="grid lg:grid-cols-3 md:grid-cols-2 grid-cols-1">
            <div class="relative overflow-hidden bg-white dark:bg-slate-900 shadow-md dark:shadow-gray-800 rounded-md">
                <div class="p-6">
                    <a href="">
                        <img src="assets/images/logo-dark.png" class="mx-auto h-[24px] block dark:hidden" alt="">
                        <img src="assets/images/logo-light.png" class="mx-auto h-[24px] dark:block hidden" alt="">
                    </a>
                    <h5 class="my-6 text-xl font-semibold">Enter Password</h5>
                    <div class="grid grid-cols-1">
                        <!--  <p class="text-slate-400 mb-6">Please enter your email address. You will receive a link to create a new password via email.</p> -->
                      
                            <div class="grid grid-cols-1">
                                <div class="mb-4 ltr:text-left rtl:text-right">
                                    <label class="font-semibold" for="LoginEmail">Password</label>
                                    <input v-model="password" @input="validatePassword()" type="password" class="form-input mt-3 rounded-md">
                                    <span class="floating-placeholder" style="font-size: x-small; color : red;" v-if="msg.password">{{msg.password}}</span>
                                </div>

                                <div class="mb-4 ltr:text-left rtl:text-right">
                                    <label class="font-semibold" for="LoginEmail">Confirm Password</label>
                                    <input v-model="confirm_password" @input="validateConfirmPassword()" id="LoginEmail" type="password" class="form-input mt-3 rounded-md">
                                    <span class="floating-placeholder" style="font-size: x-small; color : red;" v-if="msg.confirm_password">{{msg.confirm_password}}</span>
                                </div>

                                <div class="mb-4">
                                <div v-if="isSubmitting">
                                        <i class="fas fa-spinner fs-3x"></i>
                                    </div>
                                    <button v-else class="btn bg-emerald-600 hover:bg-emerald-700 border-emerald-600 hover:border-emerald-700 text-white rounded-md w-full" @click="newpassword()" :disabled="!isValid">Send</button>
                                </div>


                            </div>
                      
                    </div>
                </div>


            </div>
        </div>
    </div>
</section><!--end section -->

<script>
    const app = Vue.createApp({
        data() {
            return {
                isValid:false,
                isSubmitting: false,
                password: '',
                confirm_password: '',
                token: '<?= $token ?>',
                msg: {
                    confirm_password: "",
                    isInvalidConfirmPassword: true,
                    password: "",
                    isInValidPassword: true,
                },
            }
        },
        methods: {
            validateForm() {
                if (!this.msg.isInvalidConfirmPassword && !this.msg.isInValidPassword) {
                    this.isValid = true;
                    // console.log("IsValid");
                } else {
                    this.isValid = false;
                   
                }
            },

            validatePassword() {
                if (this.password == "") {
                    this.msg.password = 'Password cannot be empty';
                    this.msg.isInValidPassword = true;

                } else if (this.password.length < 6) {
                    this.msg.password = 'We expect your password should be more than 6 characters';
                    this.msg.isInValidPassword = true;
                } else {
                    this.msg.password = '';
                    this.msg.isInValidPassword = false;
                }
                this.validateForm();
            },

            validateConfirmPassword() {
                if (this.confirm_password == "") {
                    this.msg.confirm_password = 'Password cannot be empty';
                    this.msg.isInvalidConfirmPassword = true;

                } else if (this.confirm_password != this.password) {
                    this.msg.confirm_password = 'This password does not match';
                    this.msg.isInvalidConfirmPassword = true;
                } else {
                    this.msg.confirm_password = '';
                    this.msg.isInvalidConfirmPassword = false;
                }
                this.validateForm();
            },

            newpassword() {
                this.isSubmitting = true;
                if (this.password == "" || this.passwordz == "") {
                    Swal.fire({
                        icon: "error",
                        title: "Empty field",
                        text: "Email Field is empty"
                    })
                } else {
                    let formData = new FormData();
                    formData.append("password", this.password);
                    formData.append("token", this.token);
                    formData.append("passwordz", this.confirm_password);
                    axios.post("/auth/newpassword", formData).then((result) => {
                        if (result.status == 201) {
                            Swal.fire({
                                icon: "success",
                                title: "Password Success",
                                test: "Your password has successfully reset"
                            }).then(ress => {
                                if (ress.isConfirmed) {
                                    window.location.href = "/login";
                                }
                            });
                            this.isSubmitting = false;
                        }
                    }).catch((err) => {
                        Swal.fire({
                            icon: "error",
                            title: "Ooops...",
                            text: "An error occured",
                        });
                    });
                }

            }
        },
    });
    app.mount("#ress");
</script>